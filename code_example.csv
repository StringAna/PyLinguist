English_code,Hindi_code,Bengali_code
"for i in range(10):  # First digit
    for j in range(10):  # Second digit
        for k in range(10):  # Third digit
            # Checking for the conditions
            if i != 5 and j != 5 and k != 5 and i != j and i != k and j != k:
                print(i, j, k)","के_लिए आई रेंज(10) में:  # पहला अंक
    के_लिए जे रेंज(10) में:  # दूसरा अंक
        के_लिए के रेंज(10) में:  # तीसरा अंक
            # शर्तों की जांच
            यदि आई != 5 और जे != 5 और के != 5 और आई != जे और आई != के और जे != के:
                मुद्रित करें(आई, जे, के)","জন্য আমি পরিসীমা(10):  # প্রথম সংখ্যা
    জন্য জে পরিসীমা(10):  # দ্বিতীয় সংখ্যা
        জন্য কে পরিসীমা(10):  # তৃতীয় সংখ্যা
            # শর্ত যাচাই করা
            যদি আমি != 5 এবং জে != 5 এবং কে != 5 এবং আমি != জে এবং আমি != কে এবং জে != কে:
                মুদ্রণ(আমি, জে, কে)"
"def count_distinct_states(matrix):
    count = 0
    states = set()
    for row in matrix:
        for col in row:
            state = ''.join(col)
            if state not in states:
                count += 1
            states.add(state)
    return count
 
matrix = [['A', 'B', 'C'],
          ['A', 'B', 'D'],
          ['A', 'B', 'C']]
print(count_distinct_states(matrix))
# Output: 4","परिभाषा गिनें_अलग_राज्य(मैट्रिक्स):
    गिनती = 0
    राज्य = सेट()
    के_लिए पंक्ति मैट्रिक्स में:
        के_लिए कॉलम पंक्ति में:
            स्थिति = ''.जोड़ें(कॉलम)
            यदि स्थिति राज्य में नहीं है:
                गिनती += 1
            राज्य.जोड़ें(स्थिति)
    लौटाएं गिनती
 
मैट्रिक्स = [['ए', 'बी', 'सी'],
          ['ए', 'बी', 'डी'],
          ['ए', 'बी', 'सी']]
मुद्रित करें(गिनें_अलग_राज्य(मैट्रिक्स))
# परिणाम: 4","পদ্ধতি গণনা_বিভিন্ন_অবস্থা(ম্যাট্রিক্স):
    গণনা = 0
    অবস্থা = সেট()
    জন্য সারি ম্যাট্রিক্সে:
        জন্য কলাম সারিতে:
            অবস্থা = ''.যোগদান(কলাম)
            যদি অবস্থা অবস্থায় না থাকে:
                গণনা += 1
            অবস্থা.যোগ(অবস্থা)
    ফেরত দিন গণনা
 
ম্যাট্রিক্স = [['এ', 'বি', 'সি'],
          ['এ', 'বি', 'ডি'],
          ['এ', 'বি', 'সি']]
মুদ্রণ(গণনা_বিভিন্ন_অবস্থা(ম্যাট্রিক্স))
# ফলাফল: 4"
"def remove_spaces_and_punctuation(s):
    result = ''
    for char in s:
        if char.isalnum():
            result += char
    return result","परिभाषा हटाएं_स्थान_और_विराम(एस):
    परिणाम = ''
    के_लिए अक्षर एस में:
        यदि अक्षर.संख्या_है():
            परिणाम += अक्षर
    लौटाएं परिणाम","পদ্ধতি সরান_ফাঁকা_স্থান_এবং_যতিচিহ্ন(এস):
    ফলাফল = ''
    জন্য অক্ষর এস-এ:
        যদি অক্ষর.সংখ্যা_অথবা_অক্ষর_হয়():
            ফলাফল += অক্ষর
    ফেরত দিন ফলাফল"
"import math
 
def is_prime(n):
    # Check if the number is less than 2 or not an integer
    if n < 2 or not isinstance(n, int):
        return 'Not Prime'
 
    # Check if the number is divisible by any integer from 2 to the square root of n
    for i in range(2, math.isqrt(n) + 1):
        if n % i == 0:
            return 'Not Prime'
 
    return 'Prime'","आयात गणित
 
परिभाषा क्या_मुख्य_है(संख्या):
    # जाँच करें कि संख्या 2 से कम है या पूर्णांक नहीं है
    यदि संख्या < 2 या नहीं प्रकार_है(संख्या, पूर्णांक):
        लौटाएं 'मुख्य नहीं'
 
    # जाँच करें कि संख्या 2 से वर्गमूल तक किसी पूर्णांक से विभाज्य है या नहीं
    के_लिए आई रेंज(2, गणित.मूल(संख्या) + 1) में:
        यदि संख्या % आई == 0:
            लौटाएं 'मुख्य नहीं'
 
    लौटाएं 'मुख्य'","পদ্ধতি কি_প্রধান(সংখ্যা):
    # পরীক্ষা করুন সংখ্যা ২ এর কম কিনা বা পূর্ণসংখ্যা নয়
    যদি সংখ্যা < 2 বা নয় প্রকার(সংখ্যা, পূর্ণসংখ্যা):
        ফেরত দিন 'প্রধান নয়'
 
    # পরীক্ষা করুন ২ থেকে মূলসংখ্যার স্কোয়ার রুট পর্যন্ত কোনও পূর্ণসংখ্যা দ্বারা বিভাজ্য কিনা
    জন্য আমি পরিসীমা(2, গণিত.মূল_সংখ্যা(সংখ্যা) + 1):
        যদি সংখ্যা % আমি == 0:
            ফেরত দিন 'প্রধান নয়'
 
    ফেরত দিন 'প্রধান'"
"class String:
    def __init__(self, string):
        self.string = string
 
    def replace_odd_occurrences(self, substring, replace_with):
        count = self.string.count(substring)
        if count % 2 == 0 or count == 0:
            return self.string
 
        result = ''
        for i in range(len(self.string)):
            if self.string[i:i+len(substring)] == substring:
                if i % 2 != 0:
                    result += replace_with
                else:
                    result += substring
            else:
                result += self.string[i]
        return result","वर्ग स्ट्रिंग:
    परिभाषा __आरंभ__(खुद, स्ट्रिंग):
        खुद.स्ट्रिंग = स्ट्रिंग
 
    परिभाषा बदलें_अजीब_घटनाएं(खुद, उपस्ट्रिंग, बदल_के_साथ):
        गिनती = खुद.स्ट्रिंग.गिनें(उपस्ट्रिंग)
        यदि गिनती % 2 == 0 या गिनती == 0:
            लौटाएं खुद.स्ट्रिंग
 
        परिणाम = ''
        के_लिए आई रेंज(लंबाई(खुद.स्ट्रिंग)) में:
            यदि खुद.स्ट्रिंग[आई:आई+लंबाई(उपस्ट्रिंग)] == उपस्ट्रिंग:
                यदि आई % 2 != 0:
                    परिणाम += बदल_के_साथ
                अन्यथा:
                    परिणाम += उपस्ट्रिंग
            अन्यथा:
                परिणाम += खुद.स्ट्रिंग[आई]
        लौटाएं परिणाम","শ্রেণী স্ট্রিং:
    পদ্ধতি __প্রাথমিক__(নিজে, স্ট্রিং):
        নিজে.স্ট্রিং = স্ট্রিং
 
    পদ্ধতি প্রতিস্থাপন_বিজোড়_ঘটনা(নিজে, সাবস্ট্রিং, পরিবর্তন_সাথে):
        গণনা = নিজে.স্ট্রিং.গণনা(সাবস্ট্রিং)
        যদি গণনা % 2 == 0 বা গণনা == 0:
            ফেরত দিন নিজে.স্ট্রিং
 
        ফলাফল = ''
        জন্য আমি পরিসীমা(দৈর্ঘ্য(নিজে.স্ট্রিং)) এ:
            যদি নিজে.স্ট্রিং[আমি:আমি+দৈর্ঘ্য(সাবস্ট্রিং)] == সাবস্ট্রিং:
                যদি আমি % 2 != 0:
                    ফলাফল += পরিবর্তন_সাথে
                অন্যথায়:
                    ফলাফল += সাবস্ট্রিং
            অন্যথায়:
                ফলাফল += নিজে.স্ট্রিং[আমি]
        ফেরত দিন ফলাফল"